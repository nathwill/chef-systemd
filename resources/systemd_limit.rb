#
# Cookbook Name:: systemd
# Resource:: systemd_limit
#
# Copyright 2015 The Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resource_name :systemd_limit

property :service, String, name_property: true
property :cpu, String, default: nil
property :fsize, String, default: nil
property :data, String, default: nil
property :stack, String, default: nil
property :core, String, default: nil
property :rss, String, default: nil
property :nofile, String, default: nil
property :as, String, default: nil
property :nproc, String, default: nil
property :memlock, String, default: nil
property :locks, String, default: nil
property :sigpending, String, default: nil
property :msgqueue, String, default: nil
property :nice, String, default: nil
property :rtprio, String, default: nil
property :rttime, String, default: nil

default_action :create

def props
  %w(cpu fsize data stack core rss nofile as nproc memlock locks sigpending msgqueue nice rtprio rttime)
end

action :create do
  directory "/etc/systemd/system/#{new_resource.name}.service.d" do
    mode '0755'
  end

  output = ''
  props.each do |p|
    output += "Limit#{p.upcase}=#{new_resource.send(p).to_s}\n" if new_resource.send(p)
  end

  file "/etc/systemd/system/#{new_resource.name}.service.d/limits.conf" do
    action :create
    owner 'root'
    group 'root'
    mode '0644'
    content "# This file was generated by Chef\n# Do NOT modify this file by hand!\n[Service]\n#{output}\n"
    notifies :run, 'execute[systemctl-reload]'
  end

  execute 'systemctl-reload' do
    command 'systemctl daemon-reload'
    action :nothing
  end
end
